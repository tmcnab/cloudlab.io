//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_CollectionItems_Collections", "Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cloudlab.Models.Collection), "CollectionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cloudlab.Models.CollectionItem), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Collections_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cloudlab.Models.User), "Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cloudlab.Models.Collection), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_APIKeys_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cloudlab.Models.User), "APIKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cloudlab.Models.APIKey), true)]

#endregion

namespace Cloudlab.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollectionItem> CollectionItems
        {
            get
            {
                if ((_CollectionItems == null))
                {
                    _CollectionItems = base.CreateObjectSet<CollectionItem>("CollectionItems");
                }
                return _CollectionItems;
            }
        }
        private ObjectSet<CollectionItem> _CollectionItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Collection> Collections
        {
            get
            {
                if ((_Collections == null))
                {
                    _Collections = base.CreateObjectSet<Collection>("Collections");
                }
                return _Collections;
            }
        }
        private ObjectSet<Collection> _Collections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JSEntity> JSEntities
        {
            get
            {
                if ((_JSEntities == null))
                {
                    _JSEntities = base.CreateObjectSet<JSEntity>("JSEntities");
                }
                return _JSEntities;
            }
        }
        private ObjectSet<JSEntity> _JSEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APIKey> APIKeys
        {
            get
            {
                if ((_APIKeys == null))
                {
                    _APIKeys = base.CreateObjectSet<APIKey>("APIKeys");
                }
                return _APIKeys;
            }
        }
        private ObjectSet<APIKey> _APIKeys;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollectionItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollectionItems(CollectionItem collectionItem)
        {
            base.AddObject("CollectionItems", collectionItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Collections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollections(Collection collection)
        {
            base.AddObject("Collections", collection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JSEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJSEntities(JSEntity jSEntity)
        {
            base.AddObject("JSEntities", jSEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APIKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPIKeys(APIKey aPIKey)
        {
            base.AddObject("APIKeys", aPIKey);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="APIKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APIKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APIKey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="readFlag">Initial value of the ReadFlag property.</param>
        /// <param name="writeFlag">Initial value of the WriteFlag property.</param>
        public static APIKey CreateAPIKey(global::System.Int32 id, global::System.Int32 userId, global::System.Guid key, global::System.Boolean readFlag, global::System.Boolean writeFlag)
        {
            APIKey aPIKey = new APIKey();
            aPIKey.Id = id;
            aPIKey.UserId = userId;
            aPIKey.Key = key;
            aPIKey.ReadFlag = readFlag;
            aPIKey.WriteFlag = writeFlag;
            return aPIKey;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.Guid _Key;
        partial void OnKeyChanging(global::System.Guid value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReadFlag
        {
            get
            {
                return _ReadFlag;
            }
            set
            {
                OnReadFlagChanging(value);
                ReportPropertyChanging("ReadFlag");
                _ReadFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadFlag");
                OnReadFlagChanged();
            }
        }
        private global::System.Boolean _ReadFlag;
        partial void OnReadFlagChanging(global::System.Boolean value);
        partial void OnReadFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean WriteFlag
        {
            get
            {
                return _WriteFlag;
            }
            set
            {
                OnWriteFlagChanging(value);
                ReportPropertyChanging("WriteFlag");
                _WriteFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WriteFlag");
                OnWriteFlagChanged();
            }
        }
        private global::System.Boolean _WriteFlag;
        partial void OnWriteFlagChanging(global::System.Boolean value);
        partial void OnWriteFlagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_APIKeys_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_APIKeys_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_APIKeys_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_APIKeys_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_APIKeys_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Collection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Collection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Collection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Collection CreateCollection(global::System.Int32 id, global::System.Int32 userId, global::System.String name, global::System.DateTime created)
        {
            Collection collection = new Collection();
            collection.Id = id;
            collection.UserId = userId;
            collection.Name = name;
            collection.Created = created;
            return collection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_CollectionItems_Collections", "CollectionItem")]
        public EntityCollection<CollectionItem> CollectionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionItem>("DatabaseModel.FK_CollectionItems_Collections", "CollectionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionItem>("DatabaseModel.FK_CollectionItems_Collections", "CollectionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Collections_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Collections_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Collections_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DatabaseModel.FK_Collections_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DatabaseModel.FK_Collections_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="CollectionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollectionItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="collectionId">Initial value of the CollectionId property.</param>
        /// <param name="shortname">Initial value of the Shortname property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static CollectionItem CreateCollectionItem(global::System.Int32 id, global::System.Int32 collectionId, global::System.String shortname, global::System.String path)
        {
            CollectionItem collectionItem = new CollectionItem();
            collectionItem.Id = id;
            collectionItem.CollectionId = collectionId;
            collectionItem.Shortname = shortname;
            collectionItem.Path = path;
            return collectionItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionId
        {
            get
            {
                return _CollectionId;
            }
            set
            {
                OnCollectionIdChanging(value);
                ReportPropertyChanging("CollectionId");
                _CollectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionId");
                OnCollectionIdChanged();
            }
        }
        private global::System.Int32 _CollectionId;
        partial void OnCollectionIdChanging(global::System.Int32 value);
        partial void OnCollectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Shortname
        {
            get
            {
                return _Shortname;
            }
            set
            {
                OnShortnameChanging(value);
                ReportPropertyChanging("Shortname");
                _Shortname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Shortname");
                OnShortnameChanged();
            }
        }
        private global::System.String _Shortname;
        partial void OnShortnameChanging(global::System.String value);
        partial void OnShortnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_CollectionItems_Collections", "Collection")]
        public Collection Collection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collection>("DatabaseModel.FK_CollectionItems_Collections", "Collection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collection>("DatabaseModel.FK_CollectionItems_Collections", "Collection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Collection> CollectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collection>("DatabaseModel.FK_CollectionItems_Collections", "Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Collection>("DatabaseModel.FK_CollectionItems_Collections", "Collection", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="JSEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JSEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JSEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="entity">Initial value of the Entity property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        public static JSEntity CreateJSEntity(global::System.Int32 id, global::System.String type, global::System.String category, global::System.String entity, global::System.String name, global::System.String body)
        {
            JSEntity jSEntity = new JSEntity();
            jSEntity.Id = id;
            jSEntity.Type = type;
            jSEntity.Category = category;
            jSEntity.Entity = entity;
            jSEntity.Name = name;
            jSEntity.Body = body;
            return jSEntity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Entity
        {
            get
            {
                return _Entity;
            }
            set
            {
                OnEntityChanging(value);
                ReportPropertyChanging("Entity");
                _Entity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Entity");
                OnEntityChanged();
            }
        }
        private global::System.String _Entity;
        partial void OnEntityChanging(global::System.String value);
        partial void OnEntityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="isContactable">Initial value of the IsContactable property.</param>
        /// <param name="serviceLevel">Initial value of the ServiceLevel property.</param>
        /// <param name="serviceExpiration">Initial value of the ServiceExpiration property.</param>
        /// <param name="masterKey">Initial value of the MasterKey property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.DateTime created, global::System.DateTime lastLogin, global::System.Boolean isContactable, global::System.Int16 serviceLevel, global::System.DateTime serviceExpiration, global::System.Guid masterKey)
        {
            User user = new User();
            user.Id = id;
            user.Email = email;
            user.Created = created;
            user.LastLogin = lastLogin;
            user.IsContactable = isContactable;
            user.ServiceLevel = serviceLevel;
            user.ServiceExpiration = serviceExpiration;
            user.MasterKey = masterKey;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private global::System.DateTime _LastLogin;
        partial void OnLastLoginChanging(global::System.DateTime value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsContactable
        {
            get
            {
                return _IsContactable;
            }
            set
            {
                OnIsContactableChanging(value);
                ReportPropertyChanging("IsContactable");
                _IsContactable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsContactable");
                OnIsContactableChanged();
            }
        }
        private global::System.Boolean _IsContactable;
        partial void OnIsContactableChanging(global::System.Boolean value);
        partial void OnIsContactableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ServiceLevel
        {
            get
            {
                return _ServiceLevel;
            }
            set
            {
                OnServiceLevelChanging(value);
                ReportPropertyChanging("ServiceLevel");
                _ServiceLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceLevel");
                OnServiceLevelChanged();
            }
        }
        private global::System.Int16 _ServiceLevel;
        partial void OnServiceLevelChanging(global::System.Int16 value);
        partial void OnServiceLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ServiceExpiration
        {
            get
            {
                return _ServiceExpiration;
            }
            set
            {
                OnServiceExpirationChanging(value);
                ReportPropertyChanging("ServiceExpiration");
                _ServiceExpiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceExpiration");
                OnServiceExpirationChanged();
            }
        }
        private global::System.DateTime _ServiceExpiration;
        partial void OnServiceExpirationChanging(global::System.DateTime value);
        partial void OnServiceExpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DropboxToken
        {
            get
            {
                return _DropboxToken;
            }
            set
            {
                OnDropboxTokenChanging(value);
                ReportPropertyChanging("DropboxToken");
                _DropboxToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DropboxToken");
                OnDropboxTokenChanged();
            }
        }
        private global::System.String _DropboxToken;
        partial void OnDropboxTokenChanging(global::System.String value);
        partial void OnDropboxTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DropboxSecret
        {
            get
            {
                return _DropboxSecret;
            }
            set
            {
                OnDropboxSecretChanging(value);
                ReportPropertyChanging("DropboxSecret");
                _DropboxSecret = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DropboxSecret");
                OnDropboxSecretChanged();
            }
        }
        private global::System.String _DropboxSecret;
        partial void OnDropboxSecretChanging(global::System.String value);
        partial void OnDropboxSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MasterKey
        {
            get
            {
                return _MasterKey;
            }
            set
            {
                OnMasterKeyChanging(value);
                ReportPropertyChanging("MasterKey");
                _MasterKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterKey");
                OnMasterKeyChanged();
            }
        }
        private global::System.Guid _MasterKey;
        partial void OnMasterKeyChanging(global::System.Guid value);
        partial void OnMasterKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Collections_Users", "Collection")]
        public EntityCollection<Collection> Collections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Collection>("DatabaseModel.FK_Collections_Users", "Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Collection>("DatabaseModel.FK_Collections_Users", "Collection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_APIKeys_Users", "APIKey")]
        public EntityCollection<APIKey> APIKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<APIKey>("DatabaseModel.FK_APIKeys_Users", "APIKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<APIKey>("DatabaseModel.FK_APIKeys_Users", "APIKey", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
